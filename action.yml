name: 'Sync File'
description: 'Sync a remote file to your repository'
author: 'Johan de Jager'
inputs:
  file_url:
    description: 'The URL of the file to sync'
    required: true
  file_path:
    description: 'The path where the file should be saved'
    required: true
  github_token:
    description: 'GitHub token for authentication'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Download file
      shell: bash
      run: |
        mkdir -p $(dirname ${{ inputs.file_path }})
        curl -o ${{ inputs.file_path }} ${{ inputs.file_url }}

    - name: Check if the file has changed
      shell: bash
      run: |
        if [ -z "$(git status --porcelain)" ]; then
          echo "files_differ=false" >> $GITHUB_ENV
        else
          echo "files_differ=true" >> $GITHUB_ENV
        fi

    - name: Configure Git
      shell: bash
      if: env.files_differ == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Create or checkout branch from main
      shell: bash
      if: env.files_differ == 'true'
      run: |
        if git show-ref --verify --quiet refs/heads/update-file-branch; then
          git checkout update-file-branch
          git rebase main
        else
          git checkout -b update-file-branch
        fi

    - name: Commit and push changes
      shell: bash
      if: env.files_differ == 'true'
      run: |
        git add ${{ inputs.file_path }}
        git commit -m "Sync ${{ inputs.file_path }}"
        git push --set-upstream origin update-file-branch --force

    - name: Set GH_TOKEN for GitHub CLI
      shell: bash
      run: echo "GH_TOKEN=${{ inputs.github_token }}" >> $GITHUB_ENV

    - name: Check if PR already exists
      shell: bash
      if: env.files_differ == 'true'
      run: |
        PR_EXISTS=$(gh pr list --head update-file-branch --json number --jq '.[].number' | wc -l)
        if [ "$PR_EXISTS" -gt 0 ]; then
          echo "pr_exists=true" >> $GITHUB_ENV
        else
          echo "pr_exists=false" >> $GITHUB_ENV
        fi

    - name: Create PR if it doesn't exist
      shell: bash
      if: env.files_differ == 'true' && env.pr_exists == 'false'
      run: gh pr create --title "Sync privacy policy" --body "Sync privacy policy" --base main --head update-file-branch
